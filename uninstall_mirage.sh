#!/bin/bash

set -euo pipefail

PACKAGE_NAME="Mirage"
ENTRY_BASENAME="app"
DRY_RUN=false
PURGE=false
ALL=false
ASSUME_YES=false

for arg in "$@"; do
  case "$arg" in
    --dry-run) DRY_RUN=true ;;
    --purge)   PURGE=true ;;
    --all)     ALL=true ;;
    --yes|-y)  ASSUME_YES=true ;;
    -h|--help)
      sed -n '1,40p' "$0"
      exit 0
      ;;
    *)
      echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: $arg"
      exit 1
      ;;
  esac
done

# --- –ø–æ–º–æ—â–Ω–∏–∫–∏ ---
log() { echo -e "$@"; }
ask_yn() {
  $ASSUME_YES && return 0
  read -r -p "$1 [y/N]: " ans
  [[ "${ans,,}" == "y" || "${ans,,}" == "yes" ]]
}

safe_remove() {
  local path="$1"
  local desc="$2"
  if [[ -e "$path" ]]; then
    if $DRY_RUN; then
      log "üîç DRY-RUN: –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω $desc: $path"
    else
      rm -rf --one-file-system "$path"
      log "‚úÖ –£–¥–∞–ª—ë–Ω $desc: $path"
    fi
  else
    log "‚ÑπÔ∏è  –ù–µ –Ω–∞–π–¥–µ–Ω $desc: $path"
  fi
}

# --- –ø—É—Ç–∏ –∫–∞–∫ –≤ build_nuitka.sh ---
APP_MENU_DIR="$HOME/.local/share/applications"
AUTOSTART_DIR="$HOME/.config/autostart"
STANDALONE_DIR="$PWD/${PACKAGE_NAME}-standalone"
RUNNER_FILE="$PWD/${PACKAGE_NAME}-run"
ONEFILE_BIN="$PWD/${PACKAGE_NAME}-onefile"

DESKTOP_MAIN="${APP_MENU_DIR}/${PACKAGE_NAME}.desktop"
# –í–æ–∑–º–æ–∂–Ω—ã–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ —è—Ä–ª—ã–∫–∏ (–Ω–∞ —Å–ª—É—á–∞–π —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–æ–∫)
LEGACY_ONE_AUTOSTART="${AUTOSTART_DIR}/${PACKAGE_NAME}-onefile.desktop"
LEGACY_AUTOSTART="${AUTOSTART_DIR}/${PACKAGE_NAME}.desktop"

# –ö–æ–Ω—Ñ–∏–≥ –∏ –∫—ç—à
CONFIG_DIR="$HOME/.config/mirage"

# –ü–∞–ø–∫–∏ —Å–±–æ—Ä–∫–∏ (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–ª–∏ build_nuitka.sh –≤ —ç—Ç–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ)
BUILD_DIR_STANDALONE="$PWD/build_standalone"
BUILD_DIR1="$PWD/${PACKAGE_NAME}.build"
BUILD_DIR2="$PWD/${PACKAGE_NAME}.dist"
BUILD_DIR3="$PWD/${PACKAGE_NAME}.onefile-build"

echo "üóëÔ∏è  –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —É–¥–∞–ª–µ–Ω–∏—é ${PACKAGE_NAME}‚Ä¶"
echo "    DRY_RUN = $DRY_RUN"
echo "    PURGE   = $PURGE"
echo "    ALL     = $ALL"

if ! ask_yn "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ ${PACKAGE_NAME}?"; then
  echo "–û—Ç–º–µ–Ω–µ–Ω–æ."
  exit 0
fi

echo ""
echo "üîß –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è‚Ä¶"
safe_remove "$STANDALONE_DIR"  "Standalone-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è"
safe_remove "$RUNNER_FILE"     "runner-—Å–∫—Ä–∏–ø—Ç"
safe_remove "$ONEFILE_BIN"     "onefile-–±–∏–Ω–∞—Ä–Ω–∏–∫"

echo ""
echo "üßπ –£–¥–∞–ª–µ–Ω–∏–µ —è—Ä–ª—ã–∫–æ–≤ .desktop‚Ä¶"
safe_remove "$DESKTOP_MAIN"        "—è—Ä–ª—ã–∫ –º–µ–Ω—é"
# –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∏, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –æ—Ç —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π/—Ä—É—á–Ω—ã—Ö –≤–∫–ª—é—á–µ–Ω–∏–π
safe_remove "$LEGACY_ONE_AUTOSTART" "–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (legacy onefile)"
safe_remove "$LEGACY_AUTOSTART"     "–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (legacy)"

# –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∞–º–æ —Å–æ–∑–¥–∞–≤–∞–ª–æ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –∏–º–µ–Ω–µ–º
DEFAULT_AUTOSTART="${AUTOSTART_DIR}/${PACKAGE_NAME}.desktop"
if [[ "$DEFAULT_AUTOSTART" != "$LEGACY_AUTOSTART" ]]; then
  safe_remove "$DEFAULT_AUTOSTART" "–∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
fi

echo ""
if $PURGE; then
  echo "üß® –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (purge): –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏‚Ä¶"
  safe_remove "$CONFIG_DIR" "–∫–∞—Ç–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫"
else
  echo "‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ ${CONFIG_DIR} –æ—Å—Ç–∞–≤–ª–µ–Ω—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --purge –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è)."
fi

if $ALL; then
  echo ""
  echo "üßº –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ —Å–±–æ—Ä–∫–∏ (--all)‚Ä¶"
  safe_remove "$BUILD_DIR_STANDALONE" "build_standalone"
  safe_remove "$BUILD_DIR1"           "${PACKAGE_NAME}.build"
  safe_remove "$BUILD_DIR2"           "${PACKAGE_NAME}.dist"
  safe_remove "$BUILD_DIR3"           "${PACKAGE_NAME}.onefile-build"
fi

echo ""
if $DRY_RUN; then
  echo "‚úÖ DRY-RUN –∑–∞–≤–µ—Ä—à—ë–Ω. –ù–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–µ–Ω–æ."
else
  echo "üéâ –ì–æ—Ç–æ–≤–æ. ${PACKAGE_NAME} —É–¥–∞–ª—ë–Ω."
fi
